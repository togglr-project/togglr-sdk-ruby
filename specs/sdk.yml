openapi: 3.1.0
info:
  title: SDK API
  version: 1.0.0
servers:
  - url: http://localhost:8090
    description: Dev backend
paths:
  /sdk/v1/features/{feature_key}/evaluate:
    post:
      summary: Evaluate feature for given context
      description: |
        Returns feature evaluation result for given project and context.
        The project is derived from the API key.
      security:
        - ApiKeyAuth: []
      parameters:
        - name: feature_key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateRequest'
      responses:
        '200':
          description: Evaluation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '404':
          description: Feature not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /sdk/v1/features/{feature_key}/track:
    post:
      summary: Track event for a feature (impression / conversion / error / custom)
      description: |
        Send a feedback event related to a feature evaluation. Events are written to TimescaleDB
        (hypertable) and used for analytics, auto-disable and training MAB algorithms.
        The project is derived from the API key.
      operationId: TrackFeatureEvent
      security:
        - ApiKeyAuth: []
      parameters:
        - name: feature_key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackRequest'
            examples:
              success:
                summary: Impression example
                value:
                  variant_key: "A"
                  event_type: "success"
                  reward: 0
                  context:
                    user.id: "123"
                    country: "RU"
              error:
                summary: Error reporting via /track
                value:
                  variant_key: "B"
                  event_type: "error"
                  reward: 0
                  context:
                    error_type: "timeout"
                    error_message: "service X timed out"
      responses:
        '202':
          description: Event accepted for processing
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '404':
          description: Feature not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorTooManyRequests'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /sdk/v1/health:
    get:
      summary: Health check for SDK server
      responses:
        "200":
          description: Health information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        default:
          description: Unexpected error

  /sdk/v1/features/{feature_key}/report-error:
    post:
      summary: Report feature execution error (for auto-disable)
      operationId: ReportFeatureError
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: feature_key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureErrorReport'
      responses:
        '202':
          description: Error reported
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '404':
          description: Feature not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /sdk/v1/features/{feature_key}/health:
    get:
      summary: Get health status of feature (including auto-disable state)
      operationId: GetFeatureHealth
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: feature_key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Health status of feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureHealth'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '404':
          description: Feature not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
      required: [error]

    ErrorInternalServerError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "internal"
              message: "Internal server error"

    ErrorBadRequest:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "bad_request"
              message: "Bad request"

    ErrorUnauthorized:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "unauthorized"
              message: "Authentication required"

    ErrorPermissionDenied:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "permission_denied"
              message: "Permission denied"

    ErrorTooManyRequests:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "too_many_requests"
              message: "Too many requests"

    ErrorNotFound:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "not_found"
              message: "Resource not found"

    # ----

    EvaluateRequest:
      type: object
      additionalProperties: true
      example:
        user.id: "123"
        country: "RU"

    EvaluateResponse:
      type: object
      properties:
        feature_key:
          type: string
        enabled:
          type: boolean
        value:
          type: string
      required: [ feature_key, enabled, value ]

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [ ok ]
        server_time:
          type: string
          format: date-time
      required: [ status, server_time ]

    FeatureErrorReport:
      type: object
      properties:
        error_type:
          type: string
          example: "timeout"
        error_message:
          type: string
          example: "Service X did not respond in 5s"
        context:
          type: object
          additionalProperties: true
      required: [error_type, error_message]

    FeatureHealth:
      type: object
      properties:
        feature_key:
          type: string
        environment_key:
          type: string
        enabled:
          type: boolean
        auto_disabled:
          type: boolean
        error_rate:
          type: number
          format: float
          example: 0.15
        threshold:
          type: number
          format: float
          example: 0.2
        last_error_at:
          type: string
          format: date-time
      required: [feature_key, environment_key, enabled, auto_disabled]

    TrackRequest:
      type: object
      description: |
        Event sent from SDK. SDK SHOULD send an impression event for each evaluation (recommended).
        Conversions / errors / custom events are used to update algorithm statistics.
      properties:
        variant_key:
          type: string
          description: Variant key returned by evaluate (e.g. "A", "v2").
        event_type:
          type: string
          enum: [success, failure, error]
          description: Type of event (e.g. "success", "failure", "error").
        reward:
          type: number
          format: float
          description: Numeric reward associated with event (e.g. 1.0 for conversion). Default 0.
        context:
          type: object
          additionalProperties: true
          description: Arbitrary context passed by SDK (user id, session, metadata).
        created_at:
          type: string
          format: date-time
          description: Event timestamp. If omitted, server time will be used.
        dedup_key:
          type: string
          description: Optional idempotency key to deduplicate duplicate events from SDK retries.
      required:
        - event_type
        - variant_key
